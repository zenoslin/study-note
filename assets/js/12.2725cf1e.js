(window.webpackJsonp=window.webpackJsonp||[]).push([[12],{197:function(e,n,a){"use strict";a.r(n);var s=a(0),t=Object(s.a)({},function(){var e=this,n=e.$createElement,a=e._self._c||n;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h1",{attrs:{id:"用-webpack-搭建-ming-cli"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#用-webpack-搭建-ming-cli","aria-hidden":"true"}},[e._v("#")]),e._v(" 用 webpack 搭建 Ming-cli")]),e._v(" "),a("p",[e._v("因为从 AS3 语言向 TS 转型，选用 webpack 作为打包工具，可以省略 LayaCMD 的编译时间从而高效率的提高工作效率。")]),e._v(" "),a("h2",{attrs:{id:"业务需求"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#业务需求","aria-hidden":"true"}},[e._v("#")]),e._v(" 业务需求")]),e._v(" "),a("ul",[a("li",[e._v("[x] TS 支持")]),e._v(" "),a("li",[e._v("[x] 分包")]),e._v(" "),a("li",[e._v("[x] 断点调试")]),e._v(" "),a("li",[e._v("[x] 重新加载")])]),e._v(" "),a("h2",{attrs:{id:"安装起步"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#安装起步","aria-hidden":"true"}},[e._v("#")]),e._v(" 安装起步")]),e._v(" "),a("p",[a("code",[e._v("npm")]),e._v("（node package manager）是 nodejs 的包管理器，用于 node 插件管理（包括安装、卸载、管理依赖等），npm 安装插件过程：从"),a("a",{attrs:{href:"http://registry.npmjs.org",target:"_blank",rel:"noopener noreferrer"}},[e._v("http://registry.npmjs.org"),a("OutboundLink")],1),e._v(" 下载对应的插件包（该网站服务器位于国外，所以经常下载缓慢或出现异常）\n这时候我们就需要用到"),a("code",[e._v("cnpm")]),e._v("。")]),e._v(" "),a("p",[a("code",[e._v("cnpm")]),e._v("是淘宝镜像服务器,来自官网：“这是一个完整"),a("code",[e._v("npmjs.org")]),e._v("镜像，你可以用此代替官方版本(只读)，同步频率目前为 10 分钟 一次以保证尽量与官方服务同步。”")]),e._v(" "),a("div",{staticClass:"language-- sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("npm install -g cnpm --registry=https://registry.npm.taobao.org\n")])])]),a("p",[e._v("开始安装"),a("code",[e._v("webpack")]),e._v("，目前最新的"),a("code",[e._v("webpack")]),e._v("版本为"),a("code",[e._v("v4.27.1")]),e._v(",因为使用版本为"),a("code",[e._v("webpack 4+")]),e._v("，还需要安装 CLI")]),e._v(" "),a("div",{staticClass:"language-- sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("npm install --save-dev webpack\nnpm install --save-dev webpack-cli\n")])])]),a("p",[e._v("安装完成后，做些准备工作。打开"),a("code",[e._v("package.json")])]),e._v(" "),a("ul",[a("li",[e._v("删除入口"),a("code",[e._v('"main": "index.js"')])]),e._v(" "),a("li",[e._v("添加"),a("code",[e._v('"private": true')]),e._v("防止意外发布。")]),e._v(" "),a("li",[e._v("添加"),a("code",[e._v('"build": "webpack"')]),e._v("npm 脚本快捷发布")])]),e._v(" "),a("div",{staticClass:"language-- json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('{\n  "name": "Ming-cli",\n  "version": "1.0.0",\n  "description": "",\n  "private": true,\n  "scripts": {\n    "test": "echo \\"Error: no test specified\\" && exit 1"\n  },\n  "keywords": [],\n  "author": "zenosLin",\n  "license": "ISC",\n  "devDependencies": {\n    "webpack": "^4.27.1",\n    "webpack-cli": "^3.1.2"\n  }\n}\n')])])]),a("p",[e._v("新建配置文件"),a("code",[e._v("webpack.config.js")])]),e._v(" "),a("div",{staticClass:"language-- javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("const path = require('path');\n\nmodule.exports = {\n  entry: './src/index.js',\n  output: {\n    filename: 'bundle.js',\n    path: path.resolve(__dirname, 'dist')\n  }\n};\n")])])]),a("p",[e._v("现在一个由"),a("code",[e._v("webpack")]),e._v("组成的脚手架工具雏形已经完成。\n如果需要在 js 中打包"),a("code",[e._v("lodash")]),e._v("依赖，我们需要在本地安装 library")]),e._v(" "),a("div",{staticClass:"language--sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("npm install --save lodash\n")])])]),a("p",[e._v("并在 js 文件中"),a("code",[e._v("import _ from 'lodash'")])]),e._v(" "),a("h2",{attrs:{id:"typescript-支持"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#typescript-支持","aria-hidden":"true"}},[e._v("#")]),e._v(" TypeScript 支持")]),e._v(" "),a("p",[e._v("安装 TypeScript 编译器和 loader：")]),e._v(" "),a("div",{staticClass:"language-- sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("npm install --save-dev typescript ts-loader\n")])])]),a("p",[e._v("新建"),a("code",[e._v("tsconfig.json")]),e._v("文件")]),e._v(" "),a("p",[e._v("设置一个基本的配置，来支持 JSX，并将 TypeScript 编译到 ES5")]),e._v(" "),a("div",{staticClass:"language-- json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('{\n  "compilerOptions": {\n    "outDir": "./dist/",\n    "noImplicitAny": true,\n    "module": "es6",\n    "target": "es5",\n    "jsx": "react",\n    "allowJs": true\n  }\n}\n')])])]),a("p",[e._v("修改"),a("code",[e._v("webpack.config.js")])]),e._v(" "),a("p",[e._v("将"),a("code",[e._v("webpack")]),e._v("的入口起点指定为"),a("code",[e._v("./index.ts")]),e._v("，然后通过"),a("code",[e._v("ts-loader")]),e._v("加载所有的"),a("code",[e._v(".ts")]),e._v("和"),a("code",[e._v(".tsx")]),e._v("文件，并且在当前目录输出一个"),a("code",[e._v("bundle.js")]),e._v("文件")]),e._v(" "),a("div",{staticClass:"language-- javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("const path = require('path');\n\nmodule.exports = {\n  entry: './src/index.ts',\n  module: {\n    rules: [\n      {\n        test: /\\.tsx?$/,\n        use: 'ts-loader',\n        exclude: /node_modules/\n      }\n    ]\n  },\n  resolve: {\n    extensions: [ '.tsx', '.ts', '.js' ]\n  },\n  output: {\n    filename: 'bundle.js',\n    path: path.resolve(__dirname, 'dist')\n  }\n};\n")])])]),a("p",[e._v("这样我们就完成了对 TypeScript 的支持。")]),e._v(" "),a("h2",{attrs:{id:"分包"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#分包","aria-hidden":"true"}},[e._v("#")]),e._v(" 分包")]),e._v(" "),a("p",[e._v("接下来利用"),a("code",[e._v("webpack")]),e._v("多入口的属性来实现分包功能。先模拟工作路径创建一些"),a("code",[e._v("ts")]),e._v("文件来尝试分包。")]),e._v(" "),a("div",{staticClass:"language-- en extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("  webpack-demo\n  |- package.json\n  |- tsconfig.json\n  |- webpack.config.js\n  |- /bin\n    |- index.html\n  |- /src\n    |- main.ts\n    |- com\n       |- print.ts\n  |- /minggame\n    |- src\n      |- minggame.ts\n      |- com\n        |- print.st\n  |- /node_modules\n")])])]),a("p",[a("code",[e._v("index.html")])]),e._v(" "),a("div",{staticClass:"language--html extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('<!doctype html>\n<html>\n\n<head>\n    <title>Ming-cli</title>\n</head>\n\n<body>\n    <script src="./main.js"><\/script>\n</body>\n\n</html>\n')])])]),a("p",[e._v("完成工作路径的搭建之后，我们开始修改"),a("code",[e._v("webpack.config.js")]),e._v("，将入口设置为多个入口文件，并将它们分开"),a("code",[e._v("js")]),e._v("打包，并以不同的名称命名。在这里我们为了查看打包后的"),a("code",[e._v("js")]),e._v("文件是否正确，需要设置"),a("code",[e._v("mode")]),e._v("为"),a("code",[e._v("development")]),e._v("解除代码压缩，最新的"),a("code",[e._v("webpack")]),e._v("是默认用"),a("code",[e._v("UglifyJsPlugin")]),e._v("压缩代码的。")]),e._v(" "),a("div",{staticClass:"language-- javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("const path = require('path');\n\nmodule.exports = {\n    entry: {\n        main: './src/main.ts',\n        minggame: \"./minggame/src/minggame.ts\"\n    },\n    module: {\n        rules: [\n            {\n                test: /\\.tsx?$/,\n                use: 'ts-loader',\n                exclude: /node_modules/\n            }\n        ]\n    },\n    resolve: {\n        extensions: [ '.tsx', '.ts', '.js' ]\n    },\n    output: {\n        filename: '[name].js',\n        path: path.resolve(__dirname, 'bin')\n    },\n      mode: 'development'\n};\n")])])]),a("h2",{attrs:{id:"断点调试"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#断点调试","aria-hidden":"true"}},[e._v("#")]),e._v(" 断点调试")]),e._v(" "),a("p",[e._v("当"),a("code",[e._v("webpack")]),e._v("打包源代码时，可能会很难追踪到错误和警告在源代码中的原始位置。为了更容易地追踪错误和警告，"),a("code",[e._v("JavaScript")]),e._v("提供了 "),a("code",[e._v("source map")]),e._v("功能，将编译后的代码映射回原始源代码。")]),e._v(" "),a("p",[e._v("这时候我们需要修改"),a("code",[e._v("webpack.config.js")]),e._v("文件，使用"),a("code",[e._v("inline-source-map")]),e._v("选项。")]),e._v(" "),a("div",{staticClass:"language-- JavaScript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("const path = require('path');\n\nmodule.exports = {\n    entry: {\n        main: './src/main.ts',\n        minggame: \"./minggame/src/minggame.ts\"\n    },\n    devtool: 'inline-source-map',\n    module: {\n        rules: [\n            {\n                test: /\\.tsx?$/,\n                use: 'ts-loader',\n                exclude: /node_modules/\n            }\n        ]\n    },\n    resolve: {\n        extensions: [ '.tsx', '.ts', '.js' ]\n    },\n    output: {\n        filename: '[name].js',\n        path: path.resolve(__dirname, 'bin')\n    }\n};\n")])])]),a("h2",{attrs:{id:"重新加载"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#重新加载","aria-hidden":"true"}},[e._v("#")]),e._v(" 重新加载")]),e._v(" "),a("p",[e._v("每次都去重新编译刷新浏览器很影响我们的工作效率，所以"),a("code",[e._v("webpack-dev-server")]),e._v("为我们提供了一个简单的"),a("code",[e._v("web")]),e._v("服务器，并且能够实时重新加载(live reloading)。")]),e._v(" "),a("div",{staticClass:"language-- shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("npm install --save-dev webpack-dev-server\n")])])]),a("p",[e._v("修改"),a("code",[e._v("webpack.config.js")]),e._v("设置入口")]),e._v(" "),a("div",{staticClass:"language-- JavaScript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("const path = require('path');\n\nmodule.exports = {\n    entry: {\n        main: './src/main.ts',\n        minggame: \"./minggame/src/minggame.ts\"\n    },\n    devtool: 'inline-source-map',\n    devServer: {\n        contentBase: './dist'\n    },\n    module: {\n        rules: [\n            {\n                test: /\\.tsx?$/,\n                use: 'ts-loader',\n                exclude: /node_modules/\n            }\n        ]\n    },\n    resolve: {\n        extensions: [ '.tsx', '.ts', '.js' ]\n    },\n    output: {\n        filename: '[name].js',\n        path: path.resolve(__dirname, 'bin')\n    }\n};\n")])])]),a("p",[e._v("然后我们在"),a("code",[e._v("package.json")]),e._v("中增加一个脚本直接打开开发服务器。")]),e._v(" "),a("div",{staticClass:"language-- json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('{\n  "name": "Ming-cli",\n  "version": "1.0.0",\n  "description": "",\n  "private": true,\n  "scripts": {\n    "test": "echo \\"Error: no test specified\\" && exit 1",\n    "start": "webpack-dev-server --open",\n    "build": "webpack"\n  },\n  "keywords": [],\n  "author": "zenosLin",\n  "license": "ISC",\n  "devDependencies": {\n    "ts-loader": "^5.3.1",\n    "typescript": "^3.2.2",\n    "webpack": "^4.27.1",\n    "webpack-cli": "^3.1.2",\n    "webpack-dev-server": "^3.1.14"\n  }\n}\n\n')])])])])},[],!1,null,null,null);n.default=t.exports}}]);